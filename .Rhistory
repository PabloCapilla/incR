by = 1)
dt <- base::strptime(data[[date.name]], format = date.format,
tz = timezone)
data$time <- strftime(dt, format = "%H:%M:%S")
data$hour <- base::as.numeric(base::format(dt, "%H"))
data$minute <- base::as.numeric(base::format(dt, "%M"))
data$second <- base::as.numeric(base::format(dt, "%S"))
data$date <- base::as.Date(base::format(dt, "%Y-%m-%d"))
data$dec_time <- base::sapply(base::strsplit(data$time, ":"),
function(x) {
x <- base::as.numeric(x)
x[1] + x[2]/60 + x[3]/3600
})
data[["temp1"]] <- NA
for (i in 2:length(data[[temperature.name]])) {
data$temp1[1] <- NA
data$temp1[i] <- data[[temperature.name]][i] - data[[temperature.name]][i -
1]
}
return(data)
}
new_d <- new (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
head(new_d)
head(new.data)
library(incR)
data(incR_rawdata)
?incRprep
incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
devtools::document()
install.packages("dplyr")
library(dplyr)
data(incR_rawdata)
incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
incR::incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
devtools::document()
library(incR)
data("incR_rawdata")  # loading the data
head(incR_rawdata)
incR_rawdata_prep <- incRprep(data = incR_rawdata,
date.name = "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
head(incR_rawdata_prep, 3)
data(incR_envdata)  # environmental data
head (incR_envdata)
# then use incRenv to merge environmental data
incR_data <- incRenv (data.nest = incR_rawdata_prep,     # data set prepared by incRprep
data.env = incR_envdata,
env.temperature.name = "env_temperature",
env.date.name = "DATE",
env.date.format = "%d/%m/%Y %H:%M",
env.timezone = "GMT")
head (incR_data, 3)
incubation.analysis <- incRscan (data=incR_data,
temp.name="temperature",
lower.time=22,
upper.time=3,
sensitivity=0.15,
temp.diff.threshold =5,
maxNightVariation=2,
env.temp="env_temp")
names(incubation.analysis)
# incRscan output
head(incubation.analysis$incRscan_data)
head(incubation.analysis$incRscan_threshold)
my_plot <- incRplot(data = incubation.analysis$incRscan_data,
time.var = "dec_time",
day.var = "date",
inc.temperature.var = "temperature",
env.temperature.var = "env_temp",
vector.incubation = "incR_score")
# a ggplot plot is created that can be modified by the user
my_plot + ggplot2::labs(x = "Time", y = "Temperature")
incRatt(data = incubation.analysis[[1]], vector.incubation = "incR_score")
incRact(data = incubation.analysis[[1]],
time_column = "time",
vector.incubation = "incR_score")
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = c(5,21),                 # time window
coor = NULL,
activity.times = FALSE,
civil.twilight = FALSE,
time.zone = NULL)
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = NULL,
coor = NULL,
activity.times = TRUE,          # incRact is called to define time window
civil.twilight = FALSE,
time.zone = "GMT",
time_column= "time",
vector.incubation="incR_score")
data = incubation.analysis[[1]]
temp.name = "temperature"
limits = NULL
coor = NULL
activity.times = TRUE          # incRact is called to define time window
civil.twilight = FALSE
time.zone = "GMT"
time_column= "time"
vector.incubation="incR_score"
# calculates first_offbout and last_onbout activity times
act.times <- incRact (data= data.onoff.act,
...)
incRact(data = incubation.analysis[[1]],
time_column = "time",
vector.incubation = "incR_score")
incRt(data = incubation.analysis[[1]],
time_column = "time",
vector.incubation = "incR_score",
temp.name = "temperature",
limits = c(5,21),                 # time window
coor = NULL,
activity.times = FALSE,
civil.twilight = FALSE,
time.zone = NULL)
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = NULL,
coor = NULL,
activity.times = TRUE,          # incRact is called to define time window
civil.twilight = FALSE,
time.zone = "GMT",
time_column= "time",
vector.incubation="incR_score")
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = c(5,21),                 # time window
coor = NULL,
activity.times = FALSE,
civil.twilight = FALSE,
time.zone = NULL)
incRt(data = incubation.analysis[[1]],
time_column = "time",
vector.incubation = "incR_score",
temp.name = "temperature",
limits = NULL,
coor = NULL,
activity.times = TRUE,          # incRact is called to define time window
civil.twilight = FALSE,
time.zone = "GMT",
time_column= "time",
vector.incubation="incR_score")
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = NULL,
coor = NULL,
activity.times = TRUE,          # incRact is called to define time window
civil.twilight = FALSE,
time.zone = "GMT",
time_column= "time",
vector.incubation="incR_score")
act.times <-incRact(data = incubation.analysis[[1]],
time_column = "time",
vector.incubation = "incR_score")
do.call(args = base::lapply(strsplit(act.times$first_offbout, " "),
FUN = function(x) {
if(is.na(x)){
time <- NA
return(NA)
} else {
time <- lubridate::hm(x)
lubridate::hour(time) + lubridate::minute(time)/60
}
}),
what = "rbind")
act.times$first_offbout
strsplit(act.times$first_offbout, " ")
x<- strsplit(act.times$first_offbout, " ")[[1]]
is.na(x)
lubridate::hm(x)
lubridate::hms(x)
lubridate::second(time)/60
time <- lubridate::hms(x)
lubridate::hour(time) + lubridate::minute(time)/60 + lubridate::second(time)/60
lubridate::second(time)/3600
devtools::document()
library(incR)
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = c(5,21),                 # time window
coor = NULL,
activity.times = FALSE,
civil.twilight = FALSE,
time.zone = NULL)
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = NULL,
coor = NULL,
activity.times = TRUE,          # incRact is called to define time window
civil.twilight = FALSE,
time.zone = "GMT",
time_column= "time",
vector.incubation="incR_score")
incRt(data = incubation.analysis[[1]],
temp.name = "temperature",
limits = NULL,
coor = c(39.5, 40.5),          # choose your coordinates
activity.times = FALSE,
civil.twilight = TRUE,
time.zone = "GMT")
?incRt
data(incR_procdata)
# calculation based on chosen times from 6am to 7pm and 7pm to 6am
incRt (data=incR_procdata,
temp.name="temperature",
limits=c(6,19),
coor=NULL,
civil.twilight=FALSE,
activity.times=FALSE,
time.zone=NULL)
incRt (data=incR_procdata,
temp.name="temperature",
limits=NULL,
coor=NULL,
civil.twilight=FALSE,
activity.times=TRUE,
time.zone=NULL,
time_column="time",             # extra argument needed for incRact
vector.incubation="incR_score")
data=incR_procdata
temp.name="temperature"
limits=NULL
coor=NULL
civil.twilight=FALSE
activity.times=TRUE
time.zone=NULL
time_column="time"             # extra argument needed for incRact
vector.incubation="incR_score"
act.times <- incRact (data= data.onoff.act,
time_column="time",
vector.incubation="incR_score")
act.times <- incRact (data= data,
time_column="time",
vector.incubation="incR_score")
act.times
strsplit(act.times$first_offbout, " ")
head(data)
####
###### Preparing incR_rawdata ######
####
# raw data
incRdataExample <- read.csv("../Preparing examples/K22iButton.0805.cameracali.csv")
# the data had been proccessed before, so I delete columns to come back to the original
# raw file
incRdataExample$PRESENCE <- NULL
incRdataExample$ENTERING <- NULL
incRdataExample$LEAVING <- NULL
incRdataExample$MISSED <- NULL
incRdataExample$valueH <- NULL
incRdataExample$BOX <- NULL
names(incRdataExample) <- c("DATE", "temperature")
incR_rawdata <- incRdataExample
####
###### Preparing incR_envdata ######
####
# to create these data, only need to read it in R and save it
library("dplyr")
library("lubridate")
incR_envdata <- read.csv("../Preparing examples/KELVINGROVE15.envTemp.csv")
head(incR_envdata)
incR_envdata <- incRprep (data=incR_envdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="valueT")
devtools::use_data(incR_envdata, overwrite = TRUE, compress = "bzip2")
incR_envdata$year <- NULL
incR_envdata$date <- NULL
incR_envdata$dec_time <- NULL
incR_envdata$temp1 <- NULL
incR_envdata$index <- NULL
incR_envdata$time <- NULL
incR_envdata$SITE <- NULL
incR_envdata$hour <- NULL
incR_envdata$minute <- NULL
incR_envdata$TYPE <- NULL
incR_envdata$valueH <- NULL
incR_envdata$BOX <- NULL
names(incR_envdata) <- c("DATE", "env_temperature")
head(incR_envdata)
devtools::use_data(incR_envdata, overwrite = TRUE, compress = "bzip2")
####
###### Preparing incR_procdata
####
library(incR)
data(incR_rawdata)
data(incR_envdata)
incR_procdata <- incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M:%S",
timezone="GMT",
temperature.name="temperature")
incR_procdata
head(incR_rawdata)
####
###### Preparing incR_rawdata ######
####
# raw data
incRdataExample <- read.csv("../Preparing examples/K22iButton.0805.cameracali.csv")
# the data had been proccessed before, so I delete columns to come back to the original
# raw file
incRdataExample$PRESENCE <- NULL
incRdataExample$ENTERING <- NULL
incRdataExample$LEAVING <- NULL
incRdataExample$MISSED <- NULL
incRdataExample$valueH <- NULL
incRdataExample$BOX <- NULL
names(incRdataExample) <- c("DATE", "temperature")
incR_rawdata <- incRdataExample
incR_procdata <- incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
head(incR_procdata)
incR_procdata <- incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
incR_procdata <- incRenv (data.nest = incR_procdata,
data.env = incR_envdata,
env.temperature.name = "env_temperature",
env.date.name = "DATE",
env.date.format = "%d/%m/%Y %H:%M",
env.timezone = "GMT")
incR_procdata <- incRscan(data = incR_procdata,
temp.name = "temperature",
lower.time = 22,
upper.time = 3,
sensitivity = 0.15, temp.diff = 5,
maxNightVariation = 2,
env.temp = "env_temp")
incR_procdata <- incRscan(data = incR_procdata,
temp.name = "temperature",
lower.time = 22,
upper.time = 3,
sensitivity = 0.15,
temp.diff.threshold = 5,
maxNightVariation = 2,
env.temp = "env_temp")
head(incR_procdata)
incR_procdata <- incR_procdata$incRscan_data
devtools::use_data(incR_procdata, overwrite = TRUE, compress = "bzip2")
devtools::document()
####
###### Preparing incR_rawdata ######
####
# raw data
incRdataExample <- read.csv("../Preparing examples/K22iButton.0805.cameracali.csv")
# the data had been proccessed before, so I delete columns to come back to the original
# raw file
incRdataExample$PRESENCE <- NULL
incRdataExample$ENTERING <- NULL
incRdataExample$LEAVING <- NULL
incRdataExample$MISSED <- NULL
incRdataExample$valueH <- NULL
incRdataExample$BOX <- NULL
names(incRdataExample) <- c("DATE", "temperature")
incR_rawdata <- incRdataExample
devtools::use_data(incR_rawdata, overwrite = TRUE, compress = "bzip2")
####
###### Preparing incR_envdata ######
####
# to create these data, only need to read it in R and save it
library("dplyr")
library("lubridate")
incR_envdata <- read.csv("../Preparing examples/KELVINGROVE15.envTemp.csv")
head(incR_envdata)
incR_envdata <- incRprep (data=incR_envdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="valueT")
incR_envdata <- incR_envdata %>% filter(date == "2015-05-06" |
date == "2015-05-07" |
date == "2015-05-08")
library(incR)
RStudio.Version()
incR_envdata <- incRprep (data=incR_envdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="valueT")
incR_envdata <- incR_envdata %>% filter(date == "2015-05-06" |
date == "2015-05-07" |
date == "2015-05-08")
incR_envdata$year <- NULL
incR_envdata$date <- NULL
incR_envdata$dec_time <- NULL
incR_envdata$temp1 <- NULL
incR_envdata$index <- NULL
incR_envdata$time <- NULL
incR_envdata$SITE <- NULL
incR_envdata$hour <- NULL
incR_envdata$minute <- NULL
incR_envdata$TYPE <- NULL
incR_envdata$valueH <- NULL
incR_envdata$BOX <- NULL
names(incR_envdata) <- c("DATE", "env_temperature")
head(incR_envdata)
devtools::use_data(incR_envdata, overwrite = TRUE, compress = "bzip2")
head(incR_envdata)
incR_envdata <- incR_envdata %>% filter(date == "2015-05-06" |
date == "2015-05-07" |
date == "2015-05-08")
incR_envdata$year <- NULL
incR_envdata$date <- NULL
incR_envdata$dec_time <- NULL
incR_envdata$temp1 <- NULL
incR_envdata$index <- NULL
incR_envdata$time <- NULL
incR_envdata$SITE <- NULL
incR_envdata$hour <- NULL
incR_envdata$minute <- NULL
incR_envdata$TYPE <- NULL
incR_envdata$valueH <- NULL
incR_envdata$BOX <- NULL
names(incR_envdata) <- c("DATE", "env_temperature")
head(incR_envdata)
incR_envdata <- read.csv("../Preparing examples/KELVINGROVE15.envTemp.csv")
head(incR_envdata)
incR_envdata <- incRprep (data=incR_envdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="valueT")
head(incR_envdata)
incR_envdata <- incR_envdata %>% filter(date == "2015-05-06" |
date == "2015-05-07" |
date == "2015-05-08")
head(incR_envdata)
incR_envdata$year <- NULL
incR_envdata$date <- NULL
incR_envdata$dec_time <- NULL
incR_envdata$temp1 <- NULL
incR_envdata$index <- NULL
incR_envdata$time <- NULL
incR_envdata$SITE <- NULL
incR_envdata$hour <- NULL
incR_envdata$minute <- NULL
incR_envdata$TYPE <- NULL
incR_envdata$valueH <- NULL
incR_envdata$BOX <- NULL
head(incR_envdata)
incR_envdata$second <- NULL
names(incR_envdata) <- c("DATE", "env_temperature")
head(incR_envdata)
devtools::use_data(incR_envdata, overwrite = TRUE, compress = "bzip2")
data(incR_rawdata)
data(incR_envdata)
incR_procdata <- incRprep (data=incR_rawdata,
date.name= "DATE",
date.format= "%d/%m/%Y %H:%M",
timezone="GMT",
temperature.name="temperature")
incR_procdata <- incRenv (data.nest = incR_procdata,
data.env = incR_envdata,
env.temperature.name = "env_temperature",
env.date.name = "DATE",
env.date.format = "%d/%m/%Y %H:%M",
env.timezone = "GMT")
incR_procdata <- incRscan(data = incR_procdata,
temp.name = "temperature",
lower.time = 22,
upper.time = 3,
sensitivity = 0.15, temp.diff = 5,
maxNightVariation = 2,
env.temp = "env_temp")
head(incR_procdata)
incR_procdata <- incRscan(data = incR_procdata,
temp.name = "temperature",
lower.time = 22,
upper.time = 3,
sensitivity = 0.15,
temp.diff.threshold = 5,
maxNightVariation = 2,
env.temp = "env_temp")
head(incR_procdata)
incR_procdata <- incR_procdata$incRscan_data
devtools::use_data(incR_procdata, overwrite = TRUE, compress = "bzip2")
data(incR_envdata)
head (incR_envdata)
data("incR_procdata")
head(incR_procdata)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(incR)
devtools::document()
devtools::document()
